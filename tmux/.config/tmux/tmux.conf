# If you're using .config/tmux instead of ~, you need to make sure that this
# file is NOT hidden.

# Note: example tmux config can be found at /usr/share/doc/tmux/examples

## TODO remove H and L and assign those to move windows or panes around or
# something (like vim's C-w H or C-w L motions)

bind F

bind R source-file ~/.config/tmux/tmux.conf \; display "reloaded tmux.conf! :)"

# neovim takes forever to respond to escape unless you have this setting
# note: this must be at least 50 (default is 500). i would like 0, but it will
# produce a bunch of 0;10;10 garbage on startup if below 50.
set -g escape-time 50

# i've tried every solution under the sun and this is the only way to make tmux
# display proper colors:
set -g terminal-overrides ',xterm-256color:Tc' # for neovim colors
set -g default-terminal "tmux-256color" # shell prompt colors
# set -as terminal-overrides ',xterm*:sitm=\E[3m' # idk

set -g prefix2 C-space

set -g mouse on

# Windows and panes should start numbering at 1, not 0
set -g base-index 1

# When you close an intermediate window, shift all the right windows leftward.
set -g renumber-windows on

# display messages for more than like 2ms like bro why are they so short
set -g display-time 3000

# how many seconds between status line updates?
set -g status-interval 1

# rename window to cwd (if you rename it, it keeps your name)
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# Act like vim within a buffer
# (this makes the <prefix>? and <prefix>[ menus navigable via jk)
setw -g mode-keys vi

# nvim wants this enabled so that it can better detect file changes or something
set-option -g focus-events on

# When opening a new window, open that window in the current window's directory
bind c new-window -c "#{pane_current_path}"
bind C-c neww -c "#{pane_current_path}"

# Mnemonic split keybindings (also open those splits in the current directory)
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# Swap windows (not to be confused with swapping panes)
bind -r < swap-window -d -t -1
bind -r > swap-window -d -t +1

# Switch to most recent window
bind Tab last-window
bind C-Space last-window

# Move between panes like like vim
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

bind H set status

set -g clock-mode-style 12

# automatically switch to next available session when a session dies
set -g detach-on-destroy off

# sessionize!
# (the 'neww' part opens a new window only for fzf. the new session is separate)
bind S run-shell "tmux neww ~/.config/tmux/sessionizer.sh"

# windowize!
bind W run-shell "tmux neww ~/.config/tmux/windowizer.sh"

# note-ize! (this is getting old)
# TODO combine this with the others by checking if fzf outputs a file
bind N run-shell "tmux neww ~/.config/tmux/note-izer.sh"

bind Z new-window -n "New ZK" ~/.local/bin/zk
bind T new-window -n "todo" nvim ~/notes/projects_and_todo.md

# themes!! hooray!! ðŸŒˆðŸ˜Š
set -g status-position bottom
source-file ~/.config/tmux/my_custom_color_theme.conf
# i really don't know where this came from
# source-file ~/.config/tmux/catppuccin.conf
