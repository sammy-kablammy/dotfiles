# there are two common places your tmux config can go:
# ~/.tmux.conf               (hidden)
# ~/.config/tmux/tmux.conf   (not hidden)

# example tmux config can be found at /usr/share/doc/tmux/

# note: set a pane option with set-option -p

# also see $TMUX_PANE and similar environment variables

bind R source-file ~/.config/tmux/tmux.conf \; display "reloaded tmux.conf! :)"

# neovim takes forever to respond to escape unless you have this setting
# note: this must be at least 50 (default is 500). i would like 0, but it will
# produce a bunch of 0;10;10 garbage on startup if below 50.
# garbage seems to be less of a problem locally, but over SSH it may come back.
# https://superuser.com/a/1809494
set -g escape-time 50
# nvim wants this enabled so that it can better detect file changes or something
set-option -g focus-events on
# when a non-rightmost window dies, shift right windows leftward
set -g renumber-windows on
# automatically switch to next available session when a session dies
set -g detach-on-destroy off
# display messages for more than like .000001ms like bro why are they so short
set -g display-time 3000 # (milliseconds)
# how many seconds between status line updates? (must be integer)
set -g status-interval 1
# rename window to cwd (if you manually rename it, it uses your name)
set-option -g automatic-rename on
set-option -g automatic-rename-format '(#{b:pane_current_path})'
bind E set-option automatic-rename on
# i've tried every solution under the sun and this is the only way to make tmux
# display proper colors:
set -g terminal-overrides ',xterm-256color:Tc' # for neovim colors
set -g default-terminal "tmux-256color" # shell prompt colors
set-option -g history-limit 50000 # default is 2k? really?

set -g prefix C-s
bind C-s send-keys C-s
# set -g prefix2 C-space

set -g mouse on
set -g base-index 1
set -g mode-keys vi
set -g clock-mode-style 12
set -g bell-action none
bind Space last-window
bind C-Space last-window
bind Tab last-window
bind u last-window
bind C-u last-window
bind X set status
bind P display-popup -E -w 75% -h 75%
bind C-z resize-pane -Z # (toggle pane zoom)
bind Q clear-history

# when opening new windows & panes, use the current working directory
bind c new-window -c "#{pane_current_path}"
bind C-c new-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# mirrors vim's "alternate file" binding. this is like tmux's prefix ;
bind a select-pane -R
bind C-a select-pane -R

# pane navigating
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
unbind C-h
unbind C-j
unbind C-k
unbind C-l
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R
# pane resizing
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2
bind -r H resize-pane -L 2
bind -r S-down resize-pane -D 2
bind -r S-up resize-pane -U 2
bind -r S-right resize-pane -R 2
bind -r S-left resize-pane -L 2
# pane swapping (does this work?)
# bind -r { swap-pane -U
# bind -r } swap-pane -D

# window navigating
# don't make these repeat, you'll mess up a window switch into ctrl+p for prev command
bind C-n select-window -t:+1
bind C-p select-window -t:-1
# window swapping (not to be confused with swapping panes)
# bind -r < swap-window -d -t -1
# bind -r > swap-window -d -t +1

# "[O]ops, i meant for these two windows to be panes within the same window"
bind O join-pane -t:-1 -h # -h for | style split, -v for _ style split

# notes related things should not be here, they should be all together in a
# notes bashrc file.
# terrible awful no good dirty hack to make tmux pane stay open
# https://unix.stackexchange.com/questions/152738/how-to-split-a-new-window-and-run-a-command-in-this-new-window-using-tmux
bind W new-window -c ~ "bash --rcfile <(echo '. ~/.bashrc; f')"
# bind W display-popup -E -w 95% -h 95% ~/.local/bin/windowizer
bind S display-popup -E -w 95% -h 95% ~/.local/bin/S
# one day, there should be a manpage fzf finder here
bind Z new-window -n "New ZK" -c ~/notes "nvim $(~/.local/bin/zk)"
bind N new-window -n "NOTE" -c ~/notes nvim +'FindNotes'
bind F new-window -n "FIND NOTE" -c ~/notes -e EDITOR=nvim ~/.local/bin/findnote
bind I new-window -n "INBOX" -c ~/notes "nvim main/inbox.md"
bind T new-window -n "TEMPLATE" -c ~/.templates "nvim -R $(fzf --preview='less {}')"

bind B new-window -n "BASHRC" -c ~ "nvim ~/.bashrc_after"

# themes!! hooray!! ðŸŒˆðŸ˜Š
# source-file ~/.config/tmux/my_custom_color_theme.conf
source-file ~/.config/tmux/my_catppuccin.conf
