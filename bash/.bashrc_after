# note: to link to this file from your local bashrc, add this:
# if [ -f ~/.bashrc_after ]; then
#     source ~/.bashrc_after
# fi

# todo: make a function analogous to the builtin 'help' that explains some of my
# more common aliases/functions/scripts. add color tho. color pretty

# you can run "exec bash" to reload this file (easier than "source ~/.bashrc")

################################################################################

# note: nodejs on *some* package managers (apt, i'm looking at you) may be
# really out of date. this breaks some LSPs. use this to get newer nodejs:
# curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.0/install.sh | bash
# nvm install 20

alias 'ls'='ls --color=auto'
alias 'll'='ls -lh'
alias 'la'='ls -a'
alias 'lt'='ls -lt' # doesn't seem to work with exa
# note: you can use cp -P to not follow symlinks. can significantly shorten copies, if that's what you mean to do
alias 'cp'='cp --interactive'
alias 'rm'='rm --interactive'
alias 'mkdir'='mkdir --parents'
alias 'symlink'='ln -s'
alias 'g'='git'
alias 'em'='emacs -nw'
alias 'ap'='apropos'
alias 'fzfp'='fzf --preview="less {}"'
alias 'histn'='history | nvim' # todo filter out first column, prolly with awk
alias 'hists'='history | sed "s/[0-9]\+//" | sed "s/^\s*//" | nvim' # alternative with sed instead of awk
alias 'sizema'='du -sh ./* | sort -h' # list sizes of things in current directory
alias 'peep'='nvim -R' # lol
alias 'vimless'='/usr/local/share/nvim/runtime/macros/less.sh --clean'
alias 'vl'='vimless'
alias 'py'='python3'
alias 'bt'='bluetoothctl'
alias 'xc'='xclip -selection clipboard -rmlastnl'
alias 'wat'='watch -ctn 0.2'

# cd to multiple places at once; easier up-a-dir
c () {
    if [ $# -eq 0 ]; then
        cd ".."
    elif [ $# -eq 1 ]; then
        cd "$1"
    else
        tmux split -c "$2"
        cd "$1"
    fi
}
alias 'cc'='cd ../..'
alias 'ccc'='cd ../../..'
alias 'cccc'='cd ../../../..'

if type "exa" &> /dev/null; then
    alias 'ls'='exa'
    alias 'etree'='exa --tree'
fi
if type "batcat" &> /dev/null; then
    alias 'bat'='batcat'
fi

# don't overwrite files with the > redirect operator (use >| to forcefully redirect)
set -o noclobber

# quickly simulate WSL with `tmux new-window -e WSL_DISTRO_NAME=Ubuntu`
if [ ! -z $WSL_DISTRO_NAME ]; then
    alias 'x'='explorer.exe'
    # on WSL, you should download the wslu package to get `wslview`, which is similar to xdg-open
else
    alias 'x'='xdg-open'
fi

# not working right now
# recall: bind -x is like bind but keeps the current command typed out
# i should expand this quite a bit:
# within fzf, bind a certain key to open in a new tmux window, new tmux session,
# new tmux pane, cd into it, or just simply paste it on the current readline
# bind -x '"\C-xf":"find -maxdepth 2 -type d | fzf"'
# bind -x '"\C-xf":"READLINE_LINE=\$READLINE_LINE find -maxdepth 2 -type d | fzf"'
# (this escaping is nuts)

# combine these and just detect whether the selection is a file or directory
cf () {
    target_directory=$(find -type d -not -path "*/.git/*" 2>/dev/null | fzf)
    if [ ! -z $target_directory ]; then
        cd $target_directory
    fi
}
nf () {
    target_file=$(find -not -path "*/.git/*" 2>/dev/null | fzf)
    if [ ! -z $target_file ]; then
        nvim $target_file
    fi
}

cl () {
    cd $1 && ls
}

# shorter pushd, suppresses the "dirs"-like message that pushd normally outputs
pd() {
    if [ -z $1 ]; then
        pushd $HOME 1>/dev/null
    else
        pushd $1 1>/dev/null
    fi
}

# make and then cd into directory
mcd () {
    if [ $# -eq 1 ]; then
        mkdir -p $1
        cd $1
    else
        echo "Expected name of directory to make. Ex: 'mcd myproject'"
    fi
}

# eventually, i might want to use w3m instead of the default browser
ddg () {
    # xdg-open "https://duckduckgo.com/lite/?q=$@"
    xdg-open "https://duckduckgo.com/?q=$@"
}
mdn () {
    # this doesn't work lol ðŸ’€
    xdg-open "https://developer.mozilla.org/en-US/search?q=$1"
}
ksearch () {
    xdg-open "https://www.kernel.org/doc/html/latest/search.html?q=$1"
}

markthis() {
    echo -e "\e[34m@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\e[0m"
    echo -e "\e[32m@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\e[0m"
}

# open tmux on startup!!! we love tmux!!!
if [ -z "$TMUX" ]; then
    tmux new-session
else
    tmux set status off
fi

# check the "shopt" command section in bash(1) for more fun stuff
# typing a directory name will cd you into it
shopt -s autocd
# correct minor mistakes with cd. this doesn't appear to stack with autocd :(
shopt -s cdspell

# for this section, check out the PROMPTING heading in bash(1)
export PROMPT_DIRTRIM=3
export PS1="\[\e[0;36m\]\w\[\e[0;37m\]$ \[\e[0m\]"
export PS2="> "
if [ -z $TMUX ]; then
    PS1="(no tmux) $PS1"
fi

alias 'mann'='man --pager="nvim +Man!"'
alias 'mn'='man --pager="nvim +Man!"'
mansec () {
    man --pager="less -p $2" $1
}
# nvim is slower than less for some reason so less can stay default for now
# export MANPAGER='nvim +Man!'
# export MANWIDTH=999

# fzf catppuccin theme (https://github.com/catppuccin/fzf)
export FZF_DEFAULT_OPTS=" \
--color=bg+:#363a4f,bg:#24273a,spinner:#f4dbd6,hl:#ed8796 \
--color=fg:#cad3f5,header:#ed8796,info:#c6a0f6,pointer:#f4dbd6 \
--color=marker:#f4dbd6,fg+:#cad3f5,prompt:#c6a0f6,hl+:#ed8796"

# note: these bash settings are measured in LINES. see bash(1). also yeah
# history is still gonna be wiped occasionally. sorry.
# TODO research HISTCONTROL
export HISTSIZE=10000
export HISTFILESIZE=1000000

# share tmux history throughout all tmux panes/windows/sessions. see post:
# https://stackoverflow.com/questions/12247777/share-history-between-panes-windows
export PROMPT_COMMAND="history -a; history -n"
# from man bash (read these, i'm just plopping them here real quick):
# -a     Append the ``new'' history lines to the history file. These are history
#          lines entered since the beginning of the current bash session, but
#          not already appended to the history file.
# -n     Read the history lines not already read from the history file into the
#          current history list. These are lines appended to the history file
#          since the beginning of the current bash session

# TODO try this option and see what it does:
# shopt -s histappend

# this is supposed to fix the terminal freezing and showing a ';' character,
# then needed like seventeen ctrl+c inputs to unfreeze it. especially on WSL.
# https://github.com/microsoft/WSL/issues/7292
shopt -s no_empty_cmd_completion
# (if you don't experience the afforementioned problem, you might be tempted to
# delete this line. at least leave it commented out in case you need it again)

export VISUAL=nvim
export EDITOR=nvim

# i don't like vi mode but it's here if you want
# set -o vi

bind '"\C-xq": "\"\"\C-b"' # this usually works
bind '"\C-x\C-q": "\C-q"' # this might not work on some terminals
bind '"\C-xt": "~"'
bind '"\C-x\C-t": "\C-xt"'
bind '"\C-xb": "``\C-b"'
bind '"\C-x\C-b": "\C-xb"'
bind '"\C-xh": "--help"'
bind '"\C-x\C-h": "\C-xh"'
bind '"\C-xf": "\"$(fzf)\""'
bind '"\C-x\C-f": "\C-xf"'
bind '"\C-x?": "man bash | less -p \"Commands for Moving\"\n"' # (open keybind reference)

# WSL might not define the XDG family of environment variables for you
if [ -z XDG_CONFIG_HOME ]; then
    export XDG_CONFIG_HOME=$HOME/.config/
fi

# useful with 'tree' to monitor file system for changes
watchthis () {
    echo "use 'watch -ctn 0.2' instead"
    # while true; do
    #     clear
    #     $@
    #     sleep 0.1
    # done
    # instead of the above, you could also use the 'watch' command. however, i
    # can't get the colors right.
    # watch --no-title --color --interval 0.2 tree
    # watch -ctn 0.2 tree
    # NO WAIT i can get the colors to work it's just that 'watch' invokes the
    # default command ('ls') instead of my alias ('ls --color=auto')
}

# the classic "find | fzf" wombo combo
SAM_F_MAX_DEPTH=6
f () {
    if [ $# -eq 0 ]; then
        f_starting_dir="."
    else
        f_starting_dir="$1"
    fi
    selected=$({
        find "$f_starting_dir" -maxdepth "$SAM_F_MAX_DEPTH" -not -path "*/.git/*" 2>/dev/null
        # more 'find' commands can go here
    } | fzf --preview='less {}' --preview-window=right,50%)
    if [ -z "$selected" ]; then
        return 1
    fi
    # use --dereference as to not mistreat symlinks as files
    if [ "$(file --brief --dereference "$selected")" == "directory" ]; then
        cd "$selected"
    else
        # eventually, it would be good to xdg-open any images, videos, and so on
        nvim "$selected"
    fi
}
alias F='f ~'
alias C='f ..'
alias CC='f ../..'
alias CCC='f ../../..'
alias CCCC='f ../../../..'



# packages i usually install (make a script to download these for new machines):
# git
# tmux
# tree
# tldr
# exa
# batcat
# python3
# pip
# nodejs
# npm (is this separate from nodejs?)
# emacs
# nvim (though i usually build it from source these days)
# neofetch
# pandoc
# pdftotext (for pdf viewing with 'less')
# some latex stuff?
# java (specifically, apt package openjdk-17-jdk)
# w3m
# and some more that i'm forgetting



# note: you don't include "set" in modelines; just put the option and value
# vim: filetype=sh
